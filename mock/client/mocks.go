// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/figment-networks/polkadothub-indexer/client (interfaces: AccountClient)

// Package mock_client is a generated GoMock package.
package mock_client

import (
	accountpb "github.com/figment-networks/polkadothub-proxy/grpc/account/accountpb"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAccountClient is a mock of AccountClient interface
type MockAccountClient struct {
	ctrl     *gomock.Controller
	recorder *MockAccountClientMockRecorder
}

// MockAccountClientMockRecorder is the mock recorder for MockAccountClient
type MockAccountClientMockRecorder struct {
	mock *MockAccountClient
}

// NewMockAccountClient creates a new mock instance
func NewMockAccountClient(ctrl *gomock.Controller) *MockAccountClient {
	mock := &MockAccountClient{ctrl: ctrl}
	mock.recorder = &MockAccountClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAccountClient) EXPECT() *MockAccountClientMockRecorder {
	return m.recorder
}

// GetByHeight mocks base method
func (m *MockAccountClient) GetByHeight(arg0 string, arg1 int64) (*accountpb.GetByHeightResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByHeight", arg0, arg1)
	ret0, _ := ret[0].(*accountpb.GetByHeightResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByHeight indicates an expected call of GetByHeight
func (mr *MockAccountClientMockRecorder) GetByHeight(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByHeight", reflect.TypeOf((*MockAccountClient)(nil).GetByHeight), arg0, arg1)
}

// GetIdentity mocks base method
func (m *MockAccountClient) GetIdentity(arg0 string) (*accountpb.GetIdentityResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetIdentity", arg0)
	ret0, _ := ret[0].(*accountpb.GetIdentityResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetIdentity indicates an expected call of GetIdentity
func (mr *MockAccountClientMockRecorder) GetIdentity(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetIdentity", reflect.TypeOf((*MockAccountClient)(nil).GetIdentity), arg0)
}
