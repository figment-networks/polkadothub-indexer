// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/figment-networks/polkadothub-indexer/indexer (interfaces: FetcherClient)

// Package mock_indexer is a generated GoMock package.
package mock_indexer

import (
	heightpb "github.com/figment-networks/polkadothub-proxy/grpc/height/heightpb"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockFetcherClient is a mock of FetcherClient interface
type MockFetcherClient struct {
	ctrl     *gomock.Controller
	recorder *MockFetcherClientMockRecorder
}

// MockFetcherClientMockRecorder is the mock recorder for MockFetcherClient
type MockFetcherClientMockRecorder struct {
	mock *MockFetcherClient
}

// NewMockFetcherClient creates a new mock instance
func NewMockFetcherClient(ctrl *gomock.Controller) *MockFetcherClient {
	mock := &MockFetcherClient{ctrl: ctrl}
	mock.recorder = &MockFetcherClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockFetcherClient) EXPECT() *MockFetcherClientMockRecorder {
	return m.recorder
}

// GetAll mocks base method
func (m *MockFetcherClient) GetAll(arg0 int64) (*heightpb.GetAllResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll", arg0)
	ret0, _ := ret[0].(*heightpb.GetAllResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll
func (mr *MockFetcherClientMockRecorder) GetAll(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockFetcherClient)(nil).GetAll), arg0)
}
